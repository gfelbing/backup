#!/bin/bash
# Copyright 2016 Georg Felbinger
#
# This file is part of the github project gfelbing/backup.
# 
# gfelbing/backup is free software:
# you can redistribute it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
# 
# gfelbing/backup is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with gfelbing/backup.
# If not, see http://www.gnu.org/licenses/.

set -e
set -x

BASEDIR=$(realpath $(dirname $0))
CONFDIR=~/.config/backup

echo "Loading config variables from $BASEDIR/config"
. ~/.backup/config

echo "Creating the physical lvm volume on $DEVICE"
pvcreate $DEVICE

echo "Creating the lvm volume group $VGNAME on $DEVICE"
vgcreate $VGNAME $DEVICE

echo "Creating the lvm logical volume $LVNAME on $VGNAME"
lvcreate -l 100%VG -n $LVNAME $VGNAME

echo "Write random data to $LVNAME for better encryption. This can take some time."
badblocks -c 10240 -s -w -t random -v $LVNAME

echo "Setting up encryption, you will have to provide a passphrase"
cryptsetup luksFormat $LVNAME

echo "Creating a passphrase and save it gpg-encrypted for $GPGUID"
pwgen -cnys1 50 | gpg2 -r $GPGUID -e > $CONFDIR/pass

echo "Creating $LUKSNAME mapping, you will have to enter the provided passphrase"
echo -e `gpg2 -r $GPGUID -d ~/.config/backup/pass 2> /dev/null` | cryptsetup luksOpen /dev/$VGNAME/$LVNAME $LUKSNAME

echo "Creating btrfs into encrypted volume"
mkfs.btrfs -L $VOLUMENAME $LUKSNAME

MOUNTPOINT=`mktemp -d`
echo "Mounting $LUKSNAME to $MOUNTPOINT"
mount -t btrfs /dev/mapper/$LUKSNAME $MOUNTPOINT

echo "Creating btrfs subvolume $MOUNTPOINT/$BACKUPNAME"
btrfs subvolume create $MOUNTPOINT/$BACKUPNAME

echo "Unmounting $MOUNTPOINT"
umount $MOUNTPOINT

echo "Closing encrypted filesystem"
cryptsetup luksClose $LUKSNAME

echo "Setup done. You should backup now."
